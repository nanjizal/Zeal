// Generated by Haxe 3.4.0 (git build development @ 4a40be3)
(function () { "use strict";
var HxOverrides = function() { };
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
var Std = function() { };
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var haxe_IMap = function() { };
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
};
var htmlHelper_canvas__$CanvasWrapper_CanvasWrapper_$Impl_$ = {};
htmlHelper_canvas__$CanvasWrapper_CanvasWrapper_$Impl_$._new = function(e) {
	var this1;
	if(e == null) {
		var canvas = window.document.createElement("canvas");
		var style = canvas.style;
		style.paddingLeft = "0px";
		style.paddingTop = "0px";
		style.left = "0px";
		style.top = "0px";
		style.position = "absolute";
		this1 = canvas;
	} else {
		this1 = e;
	}
	return this1;
};
htmlHelper_canvas__$CanvasWrapper_CanvasWrapper_$Impl_$.create = function() {
	var canvas = window.document.createElement("canvas");
	var style = canvas.style;
	style.paddingLeft = "0px";
	style.paddingTop = "0px";
	style.left = "0px";
	style.top = "0px";
	style.position = "absolute";
	return canvas;
};
htmlHelper_canvas__$CanvasWrapper_CanvasWrapper_$Impl_$.set_x = function(this1,x_) {
	this1.style.left = (x_ == null ? "null" : "" + x_) + "px";
	return x_;
};
htmlHelper_canvas__$CanvasWrapper_CanvasWrapper_$Impl_$.get_x = function(this1) {
	var style = this1.style;
	return Std.parseInt(style.left.substr(0,style.left.length - 2));
};
htmlHelper_canvas__$CanvasWrapper_CanvasWrapper_$Impl_$.set_y = function(this1,y_) {
	this1.style.left = (y_ == null ? "null" : "" + y_) + "px";
	return y_;
};
htmlHelper_canvas__$CanvasWrapper_CanvasWrapper_$Impl_$.get_y = function(this1) {
	var style = this1.style;
	return Std.parseInt(style.top.substr(0,style.top.length - 2));
};
var htmlHelper_canvas_Leaf = function(image_,x_,y_) {
	if(y_ == null) {
		y_ = 0;
	}
	if(x_ == null) {
		x_ = 0;
	}
	this.leaves = [];
	this.leafAxis = [];
	this.leafCentre = [];
	this.set_image(image_);
	this.x = x_;
	this.y = y_;
};
htmlHelper_canvas_Leaf.addBox = function(surfaceOut,left,top,wid,hi) {
	surfaceOut.beginPath();
	surfaceOut.strokeStyle = "#00000f";
	surfaceOut.lineWidth = 0.1;
	surfaceOut.moveTo(left,top);
	surfaceOut.lineTo(left + wid,top);
	surfaceOut.lineTo(left + wid,top + hi);
	surfaceOut.lineTo(left,top + hi);
	surfaceOut.lineTo(left,top);
	surfaceOut.stroke();
};
htmlHelper_canvas_Leaf.quickCross = function(surface,p) {
	surface.beginPath();
	surface.strokeStyle = "#f000f0";
	surface.lineWidth = 2;
	surface.moveTo(p.x - 5,p.y);
	surface.lineTo(p.x + 5,p.y);
	surface.moveTo(p.x,p.y - 5);
	surface.lineTo(p.x,p.y + 5);
	surface.stroke();
};
htmlHelper_canvas_Leaf.prototype = {
	set_image: function(image_) {
		this.image = image_;
		this.w = this.image.width;
		this.h = this.image.height;
		return this.image;
	}
	,set_theta: function(theta_) {
		if(this.theta == null) {
			this.theta = 0;
		}
		this.theta = theta_;
		if(this.rx == null) {
			this.rx = 0;
		}
		if(this.ry == null) {
			this.ry = 0;
		}
		var sine = Math.sin(this.theta);
		var cos = Math.cos(this.theta);
		this.wid = Math.abs(this.w * cos) + Math.abs(this.h * sine) | 0;
		this.hi = Math.abs(this.w * sine) + Math.abs(this.h * cos) | 0;
		this.cx = this.wid / 2;
		this.cy = this.hi / 2;
		this.offset = this.pivotOffset();
		this.left = this.x + this.offset.x | 0;
		this.top = this.y + this.offset.y | 0;
		return theta_;
	}
	,addLeaf: function(leaf,rx_,ry_) {
		this.leafCentre.push({ x : rx_, y : ry_});
		this.leaves.push(leaf);
	}
	,rotate: function(theta_,rx_,ry_) {
		this.rx = rx_;
		this.ry = ry_;
		this.set_theta(theta_);
		var _g1 = 0;
		var _g = this.leafCentre.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.leafAxis[i] == null) {
				var dx2 = this.rx - this.leafCentre[i].x;
				var dy2 = this.ry - this.leafCentre[i].y;
				this.leafAxis.push({ beta : Math.atan2(dy2,dx2), hyp : Math.pow(dx2 * dx2 + dy2 * dy2,0.5)});
			}
		}
	}
	,pivotOffset: function() {
		var dx = this.w / 2 - this.rx;
		var dy = this.h / 2 - this.ry;
		this.beta = Math.atan2(dy,dx);
		this.hyp = Math.pow(dx * dx + dy * dy,0.5);
		var bt = this.beta + this.theta;
		return { x : this.rx - this.cx + this.hyp * Math.cos(bt) | 0, y : this.ry - this.cy + this.hyp * Math.sin(bt) | 0};
	}
	,renderOn: function(surfaceOut) {
		var p_y;
		var p_x;
		var p_y1;
		var p_x1;
		if(htmlHelper_canvas_Leaf.canvas == null) {
			var dom = window.document.createElement("Canvas");
			htmlHelper_canvas_Leaf.canvas = dom;
			htmlHelper_canvas_Leaf.surface = htmlHelper_canvas_Leaf.canvas.getContext("2d");
			htmlHelper_canvas_Leaf.imageTemp = htmlHelper_canvas_Leaf.canvas;
		}
		htmlHelper_canvas_Leaf.canvas.width = this.wid;
		htmlHelper_canvas_Leaf.canvas.height = this.hi;
		htmlHelper_canvas_Leaf.surface.translate(this.cx,this.cy);
		htmlHelper_canvas_Leaf.surface.rotate(this.theta);
		htmlHelper_canvas_Leaf.surface.drawImage(this.image,-this.w / 2,-this.h / 2,this.w,this.h);
		surfaceOut.drawImage(htmlHelper_canvas_Leaf.imageTemp,this.left,this.top,this.wid,this.hi);
		var bt = this.beta + this.theta;
		var rotX = this.left + this.cx - this.hyp * Math.cos(bt);
		var rotY = this.top + this.cy - this.hyp * Math.sin(bt);
		if(htmlHelper_canvas_Leaf.showCrosses) {
			p_x1 = rotX | 0;
			p_y1 = rotY | 0;
			surfaceOut.beginPath();
			surfaceOut.strokeStyle = "#f000f0";
			surfaceOut.lineWidth = 2;
			surfaceOut.moveTo(p_x1 - 5,p_y1);
			surfaceOut.lineTo(p_x1 + 5,p_y1);
			surfaceOut.moveTo(p_x1,p_y1 - 5);
			surfaceOut.lineTo(p_x1,p_y1 + 5);
			surfaceOut.stroke();
		}
		if(htmlHelper_canvas_Leaf.showBoxes) {
			var left = this.left;
			var top = this.top;
			var wid = this.wid;
			var hi = this.hi;
			surfaceOut.beginPath();
			surfaceOut.strokeStyle = "#00000f";
			surfaceOut.lineWidth = 0.1;
			surfaceOut.moveTo(left,top);
			surfaceOut.lineTo(left + wid,top);
			surfaceOut.lineTo(left + wid,top + hi);
			surfaceOut.lineTo(left,top + hi);
			surfaceOut.lineTo(left,top);
			surfaceOut.stroke();
		}
		htmlHelper_canvas_Leaf.surface.rotate(-this.theta);
		htmlHelper_canvas_Leaf.surface.translate(-this.cx,-this.cy);
		htmlHelper_canvas_Leaf.surface.clearRect(0,0,Math.ceil(this.cx),Math.ceil(this.cy));
		var _g1 = 0;
		var _g = this.leaves.length;
		while(_g1 < _g) {
			var i = _g1++;
			var axis = this.leafAxis[i];
			var leaf = this.leaves[i];
			var loff = leaf.offset;
			var hyp2 = axis.hyp;
			var b2t = axis.beta + this.theta;
			if(htmlHelper_canvas_Leaf.showCrosses) {
				p_x = rotX - hyp2 * Math.cos(b2t) | 0;
				p_y = rotY - hyp2 * Math.sin(b2t) | 0;
				surfaceOut.beginPath();
				surfaceOut.strokeStyle = "#f000f0";
				surfaceOut.lineWidth = 2;
				surfaceOut.moveTo(p_x - 5,p_y);
				surfaceOut.lineTo(p_x + 5,p_y);
				surfaceOut.moveTo(p_x,p_y - 5);
				surfaceOut.lineTo(p_x,p_y + 5);
				surfaceOut.stroke();
			}
			leaf.left = rotX - hyp2 * Math.cos(b2t) + loff.x - leaf.rx | 0;
			leaf.top = rotY - hyp2 * Math.sin(b2t) + loff.y - leaf.ry | 0;
			this.leaves[i].renderOn(surfaceOut);
		}
	}
};
var htmlHelper_tools_AnimateTimer = function() { };
htmlHelper_tools_AnimateTimer.create = function() {
	if(htmlHelper_tools_AnimateTimer.s != null) {
		return;
	}
	htmlHelper_tools_AnimateTimer.s = window.document.createElement("style");
	htmlHelper_tools_AnimateTimer.s.innerHTML = "@keyframes spin { from { transform:rotate( 0deg ); } to { transform:rotate( 360deg ); } }";
	window.document.getElementsByTagName("head")[0].appendChild(htmlHelper_tools_AnimateTimer.s);
	htmlHelper_tools_AnimateTimer.s.animation = "spin 1s linear infinite";
	htmlHelper_tools_AnimateTimer.loop(60.0);
};
htmlHelper_tools_AnimateTimer.loop = function(tim) {
	window.requestAnimationFrame(htmlHelper_tools_AnimateTimer.loop);
	if(htmlHelper_tools_AnimateTimer.onFrame != null) {
		htmlHelper_tools_AnimateTimer.onFrame(htmlHelper_tools_AnimateTimer.counter);
	}
	htmlHelper_tools_AnimateTimer.counter++;
	return true;
};
htmlHelper_tools_AnimateTimer.kill = function() {
	if(htmlHelper_tools_AnimateTimer.s == null) {
		return;
	}
	window.document.getElementsByTagName("head")[0].removeChild(htmlHelper_tools_AnimateTimer.s);
	htmlHelper_tools_AnimateTimer.onFrame = null;
	htmlHelper_tools_AnimateTimer.s = null;
};
htmlHelper_tools_AnimateTimer.tween = function(t,b,e,d,f) {
	if(t > d) {
		return null;
	}
	return f(t,b,e - b,d);
};
var htmlHelper_tools_ImageLoader = function(imageNames,loaded_) {
	this.images = new haxe_ds_StringMap();
	this.loaded = loaded_;
	this.count = imageNames.length;
	var _g = 0;
	while(_g < imageNames.length) {
		var name = imageNames[_g];
		++_g;
		this.load(name);
	}
};
htmlHelper_tools_ImageLoader.prototype = {
	load: function(img) {
		var image = window.document.createElement("img");
		var imgStyle = image.style;
		imgStyle.left = "0px";
		imgStyle.top = "0px";
		imgStyle.paddingLeft = "0px";
		imgStyle.paddingTop = "0px";
		var f = $bind(this,this.store);
		var a1 = image;
		var a2 = img.split("/").pop();
		image.onload = function(e) {
			f(a1,a2,e);
		};
		imgStyle.position = "absolute";
		image.src = img;
	}
	,store: function(image,name,e) {
		this.count--;
		console.log("store " + name + " " + this.count);
		var _this = this.images;
		if(__map_reserved[name] != null) {
			_this.setReserved(name,image);
		} else {
			_this.h[name] = image;
		}
		if(this.count == 0) {
			this.loaded();
		}
	}
};
var zeal_Zeal = function(surface_) {
	this.surface = surface_;
	this.zebraSkin = new htmlHelper_tools_ImageLoader(["zebraParts/frontLegTop.png","zebraParts/frontLegBottom.png","zebraParts/frontHoff.png","zebraParts/backLegTop.png","zebraParts/backLegBottom.png","zebraParts/backHoff.png","zebraParts/body.png","zebraParts/tail.png","zebraParts/neck.png","zebraParts/head.png","zebraParts/chin.png"],$bind(this,this.onZebraLoaded));
};
zeal_Zeal.prototype = {
	onZebraLoaded: function() {
		this.zebras = [];
		var _g = 0;
		while(_g < 7) {
			var zebra = new zeal_Zebra(this.surface,700 + Math.random() * 300 | 0,100 + _g++ * 30 | 0,this.zebraSkin);
			zebra.angle = Math.PI / (Math.random() * 8);
			this.zebras.push(zebra);
		}
		this.animate();
	}
	,animate: function() {
		htmlHelper_tools_AnimateTimer.onFrame = $bind(this,this.animateZebra);
		if(htmlHelper_tools_AnimateTimer.s == null) {
			htmlHelper_tools_AnimateTimer.s = window.document.createElement("style");
			htmlHelper_tools_AnimateTimer.s.innerHTML = "@keyframes spin { from { transform:rotate( 0deg ); } to { transform:rotate( 360deg ); } }";
			window.document.getElementsByTagName("head")[0].appendChild(htmlHelper_tools_AnimateTimer.s);
			htmlHelper_tools_AnimateTimer.s.animation = "spin 1s linear infinite";
			htmlHelper_tools_AnimateTimer.loop(60.0);
		}
	}
	,animateZebra: function(count) {
		this.surface.clearRect(0,0,1024,768);
		var _g = 0;
		while(_g < 7) {
			var _this = this.zebras[_g++];
			_this.angle += 0.4;
			var sin = Math.sin(_this.angle);
			var cos2 = Math.cos(-_this.angle);
			var spi = sin * Math.PI;
			var cpi = Math.cos(_this.angle) * Math.PI;
			_this.body.set_theta(-Math.PI / 50 * sin);
			_this.frontLegTop2.set_theta(cpi / 7 + Math.PI / 14);
			_this.backLegTop2.set_theta(Math.PI / 10 * cos2);
			_this.frontLegBottom2.set_theta(-Math.PI / 10 - cpi / 20);
			_this.backLegBottom2.set_theta(Math.PI / 10 - Math.PI / 10 * cos2 / 2);
			_this.frontLegTop.set_theta(Math.PI / 7 * sin + Math.PI / 14);
			_this.backLegTop.set_theta(spi / 10);
			_this.frontLegBottom.set_theta(-Math.PI / 10 - Math.PI / 10 * sin / 2);
			_this.backLegBottom.set_theta(Math.PI / 10 - Math.PI / 10 * sin / 2);
			_this.tail.set_theta(spi / 30);
			_this.chin.set_theta(spi / 20 - Math.PI / 10);
			_this.neck.set_theta(-spi / 25);
			_this.x = this.minus13(_this.x,_this.y,_this.angle);
			_this.y = this.upAndDown(_this.x,_this.y,_this.angle);
			_this.body.x = _this.x;
			_this.body.y = _this.y;
			_this.body.renderOn(_this.surface);
		}
		if(count > 80) {
			this.resetZeal();
		}
	}
	,resetZeal: function() {
		var _g = 0;
		while(_g < 7) {
			var i = _g++;
			this.zebras[i].setPosition(700 + Math.random() * 300 | 0,100 + i * 30 | 0);
		}
		htmlHelper_tools_AnimateTimer.counter = 0;
	}
	,minus13: function(x,y,angle) {
		return x - 5;
	}
	,upAndDown: function(x,y,angle) {
		return y + (3 * Math.sin(angle / 7) | 0);
	}
};
var zeal_ZealMain = function() {
	var this1;
	var canvas = window.document.createElement("canvas");
	var style = canvas.style;
	style.paddingLeft = "0px";
	style.paddingTop = "0px";
	style.left = "0px";
	style.top = "0px";
	style.position = "absolute";
	this1 = canvas;
	var canvas1 = this1;
	htmlHelper_canvas_Leaf.showBoxes = true;
	htmlHelper_canvas_Leaf.showCrosses = true;
	canvas1.width = 1024;
	canvas1.height = 768;
	window.document.body.appendChild(canvas1);
	new zeal_Zeal(canvas1.getContext("2d",null));
};
zeal_ZealMain.main = function() {
	new zeal_ZealMain();
};
var zeal_Zebra = function(surface_,x_,y_,imageLoader_) {
	this.angle = Math.PI;
	this.surface = surface_;
	this.x = x_;
	this.y = y_;
	this.imageLoader = imageLoader_;
	var images = this.imageLoader.images;
	var imageB = __map_reserved["body.png"] != null ? images.getReserved("body.png") : images.h["body.png"];
	this.body = new htmlHelper_canvas_Leaf(imageB,this.x,this.y);
	this.head = new htmlHelper_canvas_Leaf(__map_reserved["head.png"] != null ? images.getReserved("head.png") : images.h["head.png"]);
	this.neck = new htmlHelper_canvas_Leaf(__map_reserved["neck.png"] != null ? images.getReserved("neck.png") : images.h["neck.png"]);
	this.chin = new htmlHelper_canvas_Leaf(__map_reserved["chin.png"] != null ? images.getReserved("chin.png") : images.h["chin.png"]);
	this.tail = new htmlHelper_canvas_Leaf(__map_reserved["tail.png"] != null ? images.getReserved("tail.png") : images.h["tail.png"]);
	this.backHoff = new htmlHelper_canvas_Leaf(__map_reserved["backHoff.png"] != null ? images.getReserved("backHoff.png") : images.h["backHoff.png"]);
	this.frontHoff = new htmlHelper_canvas_Leaf(__map_reserved["frontHoff.png"] != null ? images.getReserved("frontHoff.png") : images.h["frontHoff.png"]);
	this.frontLegTop = new htmlHelper_canvas_Leaf(__map_reserved["frontLegTop.png"] != null ? images.getReserved("frontLegTop.png") : images.h["frontLegTop.png"]);
	this.backLegTop = new htmlHelper_canvas_Leaf(__map_reserved["backLegTop.png"] != null ? images.getReserved("backLegTop.png") : images.h["backLegTop.png"]);
	this.frontLegBottom = new htmlHelper_canvas_Leaf(__map_reserved["frontLegBottom.png"] != null ? images.getReserved("frontLegBottom.png") : images.h["frontLegBottom.png"]);
	this.backLegBottom = new htmlHelper_canvas_Leaf(__map_reserved["backLegBottom.png"] != null ? images.getReserved("backLegBottom.png") : images.h["backLegBottom.png"]);
	this.backHoff2 = new htmlHelper_canvas_Leaf(__map_reserved["backHoff.png"] != null ? images.getReserved("backHoff.png") : images.h["backHoff.png"]);
	this.frontHoff2 = new htmlHelper_canvas_Leaf(__map_reserved["frontHoff.png"] != null ? images.getReserved("frontHoff.png") : images.h["frontHoff.png"]);
	this.frontLegTop2 = new htmlHelper_canvas_Leaf(__map_reserved["frontLegTop.png"] != null ? images.getReserved("frontLegTop.png") : images.h["frontLegTop.png"]);
	this.backLegTop2 = new htmlHelper_canvas_Leaf(__map_reserved["backLegTop.png"] != null ? images.getReserved("backLegTop.png") : images.h["backLegTop.png"]);
	this.frontLegBottom2 = new htmlHelper_canvas_Leaf(__map_reserved["frontLegBottom.png"] != null ? images.getReserved("frontLegBottom.png") : images.h["frontLegBottom.png"]);
	this.backLegBottom2 = new htmlHelper_canvas_Leaf(__map_reserved["backLegBottom.png"] != null ? images.getReserved("backLegBottom.png") : images.h["backLegBottom.png"]);
	this.neck.addLeaf(this.head,18,32);
	this.head.addLeaf(this.chin,20,62);
	this.body.addLeaf(this.tail,230,25);
	this.body.addLeaf(this.neck,33,49);
	this.frontLegTop2.addLeaf(this.frontLegBottom2,35,93);
	this.backLegTop2.addLeaf(this.backLegBottom2,47,73);
	this.frontLegBottom2.addLeaf(this.frontHoff2,10,48);
	this.backLegBottom2.addLeaf(this.backHoff2,10,53);
	this.body.addLeaf(this.backLegTop2,185,55);
	this.body.addLeaf(this.frontLegTop2,28,85);
	this.frontLegTop.addLeaf(this.frontLegBottom,35,95);
	this.backLegTop.addLeaf(this.backLegBottom,47,75);
	this.frontLegBottom.addLeaf(this.frontHoff,10,50);
	this.backLegBottom.addLeaf(this.backHoff,10,55);
	this.body.addLeaf(this.backLegTop,185,57);
	this.body.addLeaf(this.frontLegTop,28,87);
	this.tail.rotate(0,5,5);
	this.body.rotate(0,imageB.width / 2,imageB.height / 2);
	this.chin.rotate(0,11,-5);
	this.head.rotate(0,40,30);
	this.neck.rotate(0,80,90);
	this.frontHoff.rotate(0,15,0);
	this.backHoff.rotate(0,15,0);
	this.frontLegBottom.rotate(0,10,10);
	this.backLegBottom.rotate(0,15,5);
	this.frontLegTop.rotate(0,25,25);
	this.backLegTop.rotate(0,23,-8);
	this.frontHoff2.rotate(0,15,0);
	this.backHoff2.rotate(0,15,0);
	this.frontLegBottom2.rotate(0,10,10);
	this.backLegBottom2.rotate(0,15,5);
	this.frontLegTop2.rotate(0,25,25);
	this.backLegTop2.rotate(0,23,-8);
	this.body.renderOn(this.surface);
};
zeal_Zebra.prototype = {
	createSkeleton: function() {
		var images = this.imageLoader.images;
		var imageB = __map_reserved["body.png"] != null ? images.getReserved("body.png") : images.h["body.png"];
		this.body = new htmlHelper_canvas_Leaf(imageB,this.x,this.y);
		this.head = new htmlHelper_canvas_Leaf(__map_reserved["head.png"] != null ? images.getReserved("head.png") : images.h["head.png"]);
		this.neck = new htmlHelper_canvas_Leaf(__map_reserved["neck.png"] != null ? images.getReserved("neck.png") : images.h["neck.png"]);
		this.chin = new htmlHelper_canvas_Leaf(__map_reserved["chin.png"] != null ? images.getReserved("chin.png") : images.h["chin.png"]);
		this.tail = new htmlHelper_canvas_Leaf(__map_reserved["tail.png"] != null ? images.getReserved("tail.png") : images.h["tail.png"]);
		this.backHoff = new htmlHelper_canvas_Leaf(__map_reserved["backHoff.png"] != null ? images.getReserved("backHoff.png") : images.h["backHoff.png"]);
		this.frontHoff = new htmlHelper_canvas_Leaf(__map_reserved["frontHoff.png"] != null ? images.getReserved("frontHoff.png") : images.h["frontHoff.png"]);
		this.frontLegTop = new htmlHelper_canvas_Leaf(__map_reserved["frontLegTop.png"] != null ? images.getReserved("frontLegTop.png") : images.h["frontLegTop.png"]);
		this.backLegTop = new htmlHelper_canvas_Leaf(__map_reserved["backLegTop.png"] != null ? images.getReserved("backLegTop.png") : images.h["backLegTop.png"]);
		this.frontLegBottom = new htmlHelper_canvas_Leaf(__map_reserved["frontLegBottom.png"] != null ? images.getReserved("frontLegBottom.png") : images.h["frontLegBottom.png"]);
		this.backLegBottom = new htmlHelper_canvas_Leaf(__map_reserved["backLegBottom.png"] != null ? images.getReserved("backLegBottom.png") : images.h["backLegBottom.png"]);
		this.backHoff2 = new htmlHelper_canvas_Leaf(__map_reserved["backHoff.png"] != null ? images.getReserved("backHoff.png") : images.h["backHoff.png"]);
		this.frontHoff2 = new htmlHelper_canvas_Leaf(__map_reserved["frontHoff.png"] != null ? images.getReserved("frontHoff.png") : images.h["frontHoff.png"]);
		this.frontLegTop2 = new htmlHelper_canvas_Leaf(__map_reserved["frontLegTop.png"] != null ? images.getReserved("frontLegTop.png") : images.h["frontLegTop.png"]);
		this.backLegTop2 = new htmlHelper_canvas_Leaf(__map_reserved["backLegTop.png"] != null ? images.getReserved("backLegTop.png") : images.h["backLegTop.png"]);
		this.frontLegBottom2 = new htmlHelper_canvas_Leaf(__map_reserved["frontLegBottom.png"] != null ? images.getReserved("frontLegBottom.png") : images.h["frontLegBottom.png"]);
		this.backLegBottom2 = new htmlHelper_canvas_Leaf(__map_reserved["backLegBottom.png"] != null ? images.getReserved("backLegBottom.png") : images.h["backLegBottom.png"]);
		this.neck.addLeaf(this.head,18,32);
		this.head.addLeaf(this.chin,20,62);
		this.body.addLeaf(this.tail,230,25);
		this.body.addLeaf(this.neck,33,49);
		this.frontLegTop2.addLeaf(this.frontLegBottom2,35,93);
		this.backLegTop2.addLeaf(this.backLegBottom2,47,73);
		this.frontLegBottom2.addLeaf(this.frontHoff2,10,48);
		this.backLegBottom2.addLeaf(this.backHoff2,10,53);
		this.body.addLeaf(this.backLegTop2,185,55);
		this.body.addLeaf(this.frontLegTop2,28,85);
		this.frontLegTop.addLeaf(this.frontLegBottom,35,95);
		this.backLegTop.addLeaf(this.backLegBottom,47,75);
		this.frontLegBottom.addLeaf(this.frontHoff,10,50);
		this.backLegBottom.addLeaf(this.backHoff,10,55);
		this.body.addLeaf(this.backLegTop,185,57);
		this.body.addLeaf(this.frontLegTop,28,87);
		this.tail.rotate(0,5,5);
		this.body.rotate(0,imageB.width / 2,imageB.height / 2);
		this.chin.rotate(0,11,-5);
		this.head.rotate(0,40,30);
		this.neck.rotate(0,80,90);
		this.frontHoff.rotate(0,15,0);
		this.backHoff.rotate(0,15,0);
		this.frontLegBottom.rotate(0,10,10);
		this.backLegBottom.rotate(0,15,5);
		this.frontLegTop.rotate(0,25,25);
		this.backLegTop.rotate(0,23,-8);
		this.frontHoff2.rotate(0,15,0);
		this.backHoff2.rotate(0,15,0);
		this.frontLegBottom2.rotate(0,10,10);
		this.backLegBottom2.rotate(0,15,5);
		this.frontLegTop2.rotate(0,25,25);
		this.backLegTop2.rotate(0,23,-8);
		this.body.renderOn(this.surface);
	}
	,animateAcross: function(dx,dy) {
		this.angle += 0.4;
		var sin = Math.sin(this.angle);
		var cos2 = Math.cos(-this.angle);
		var spi = sin * Math.PI;
		var cpi = Math.cos(this.angle) * Math.PI;
		this.body.set_theta(-Math.PI / 50 * sin);
		this.frontLegTop2.set_theta(cpi / 7 + Math.PI / 14);
		this.backLegTop2.set_theta(Math.PI / 10 * cos2);
		this.frontLegBottom2.set_theta(-Math.PI / 10 - cpi / 20);
		this.backLegBottom2.set_theta(Math.PI / 10 - Math.PI / 10 * cos2 / 2);
		this.frontLegTop.set_theta(Math.PI / 7 * sin + Math.PI / 14);
		this.backLegTop.set_theta(spi / 10);
		this.frontLegBottom.set_theta(-Math.PI / 10 - Math.PI / 10 * sin / 2);
		this.backLegBottom.set_theta(Math.PI / 10 - Math.PI / 10 * sin / 2);
		this.tail.set_theta(spi / 30);
		this.chin.set_theta(spi / 20 - Math.PI / 10);
		this.neck.set_theta(-spi / 25);
		this.x = dx(this.x,this.y,this.angle);
		this.y = dy(this.x,this.y,this.angle);
		this.body.x = this.x;
		this.body.y = this.y;
		this.body.renderOn(this.surface);
	}
	,setPosition: function(x_,y_) {
		this.x = x_;
		this.y = y_;
	}
	,runMovement: function() {
		this.angle += 0.4;
		var sin = Math.sin(this.angle);
		var cos2 = Math.cos(-this.angle);
		var spi = sin * Math.PI;
		var cpi = Math.cos(this.angle) * Math.PI;
		this.body.set_theta(-Math.PI / 50 * sin);
		this.frontLegTop2.set_theta(cpi / 7 + Math.PI / 14);
		this.backLegTop2.set_theta(Math.PI / 10 * cos2);
		this.frontLegBottom2.set_theta(-Math.PI / 10 - cpi / 20);
		this.backLegBottom2.set_theta(Math.PI / 10 - Math.PI / 10 * cos2 / 2);
		this.frontLegTop.set_theta(Math.PI / 7 * sin + Math.PI / 14);
		this.backLegTop.set_theta(spi / 10);
		this.frontLegBottom.set_theta(-Math.PI / 10 - Math.PI / 10 * sin / 2);
		this.backLegBottom.set_theta(Math.PI / 10 - Math.PI / 10 * sin / 2);
		this.tail.set_theta(spi / 30);
		this.chin.set_theta(spi / 20 - Math.PI / 10);
		this.neck.set_theta(-spi / 25);
	}
};
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
var __map_reserved = {}
htmlHelper_canvas_Leaf.showBoxes = false;
htmlHelper_canvas_Leaf.showCrosses = false;
htmlHelper_tools_AnimateTimer.counter = 0;
zeal_Zeal.numberOfZebra = 7;
zeal_ZealMain.main();
})();
